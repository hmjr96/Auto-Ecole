<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOiSURBVGhD7ZlZTxNRFMf5LCLugLKUpQt7NwqIAlZNBF/0XSXIjrIYECN+IyOGYPwGJIV2OjNd
        aAu0+AT0eM90xlDa3rlzMToP/ScnTSczye83PXPm3rSinHLKKcec+TX41Hfc79897n8MmT4/ZHxYjyDT
        izUCaS/WMKQ9WEOQdg/BkethrpwPctUzqNRh9/1cdQ3AYSdWPxx0YPXBQTuWDw7asHoh5SBl9+bK5oGU
        1RNIWd1eFYs9BFwwATwkrW5ItrqCKhZ7/js8KRUeki0uULHYYyb4ZIuTQ8BE8InmHh4B88AnmngETASf
        aOrmETAPfMLCIcAKn+geALHDB1ECzAovE1ih1Qkx8skCn2js4hHQh48T4N1nLyC99QPE2SWQCKAefJiA
        C5PvIL25BYHhMZDJdz34/YZODgGGO783+hJOkinAZM/OQFz4AKLDS4UPzy0r52Lw2sDIGESbiQQFnlOA
        3vPYNpntnwqIlj8Sdo8uvJb0920IWbqo8Pv1HRwCOg8s9rw4XwiUk1gB0ebOgxfnV4qeK7ydBwkFKPD7
        de3GBWjw2rSRCaA48x6yJycqkppsFuS1DQhbXQq8tPpZOXY+eE1ofBYES6cufJxbgAKvTRvs+fB0CYnV
        DaVKwYca2eDj99o4BBjgtWkjOTwQnlwolMBc8s4jfPyug1OAAV6bNpLdXVpCDS98vJZHwAC8Nm2w54UJ
        InHhYcXgMV74eK2dT8AIPE4b0eos2vNKyDFp5RMISt8bg4/VcAgYhcdpUxJeiyoRIrBG4GPVNk4BI/Br
        Xwrgs6enSuUFJZbXIUhAWeFj1VYOgcvCa6NyfKbwwSbnikvrEEIJBvjYHR6BvwCPDyz2fOhNCYnFj7BH
        YPXgo7dbeQTo8LgkVl5gRZYH4ZnFvJcU9rwwVfzc4OtpCNfaqPDRWy3GBWjwuBHB9Twuo8+nGLw2bbDn
        Q2QZfVHi6NsW7BJQGjynQGl4LNyMBPzP85bT+IvQlgdB0iahc++Jk0QSdgaegFRDoCnw0ZvNHAIUeGUb
        aPVAhGxEAsOjcEQ2J8LEnDrj6S+pILnTwVdTcPh1E3b6/CAywEdvNPEI0OG1bSBuRnA9z7Ik1qYN9jy2
        DcudR/gIl0ApeMY9bCl4vWlTDD5y3cIjYB74yDUOATPBR6oaOQRMBC9XNXAKmARevsojYCJ4ubKeQ8Dq
        Ec0CL1fWCSoWe1I2p4/ASyaAFyNXGoz/xVROOeWU8w9SUfEbF0Q0tPbNoD4AAAAASUVORK5CYII=
</value>
  </data>
</root>